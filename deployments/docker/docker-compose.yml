version: '3.8'

services:
  # ============================================================================
  # MESSAGE QUEUE - Apache Kafka
  # ============================================================================
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    hostname: zookeeper
    container_name: twinup-zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    volumes:
      - zookeeper_data:/var/lib/zookeeper/data
      - zookeeper_logs:/var/lib/zookeeper/log
    networks:
      - twinup-network

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    hostname: kafka
    container_name: twinup-kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "9101:9101"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: kafka:29092
      KAFKA_CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
      KAFKA_CONFLUENT_METRICS_ENABLE: 'true'
      KAFKA_CONFLUENT_SUPPORT_CUSTOMER_ID: anonymous
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_LOG_RETENTION_HOURS: 168
      KAFKA_LOG_SEGMENT_BYTES: 1073741824
    volumes:
      - kafka_data:/var/lib/kafka/data
    networks:
      - twinup-network
    healthcheck:
      test: ["CMD-SHELL", "kafka-broker-api-versions --bootstrap-server localhost:9092"]
      interval: 30s
      timeout: 10s
      retries: 3

  # ============================================================================
  # CACHE - Redis
  # ============================================================================
  redis:
    image: redis:7.2-alpine
    hostname: redis
    container_name: twinup-redis
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes --maxmemory 512mb --maxmemory-policy allkeys-lru
    volumes:
      - redis_data:/data
    networks:
      - twinup-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # ============================================================================
  # DATABASE - ClickHouse
  # ============================================================================
  clickhouse:
    image: clickhouse/clickhouse-server:23.8
    hostname: clickhouse
    container_name: twinup-clickhouse
    ports:
      - "8123:8123"  # HTTP interface
      - "9000:9000"  # Native TCP interface
    environment:
      CLICKHOUSE_DB: sensor_data
      CLICKHOUSE_USER: twinup
      CLICKHOUSE_PASSWORD: twinup123
      CLICKHOUSE_DEFAULT_ACCESS_MANAGEMENT: 1
    volumes:
      - clickhouse_data:/var/lib/clickhouse
      - ./clickhouse/init:/docker-entrypoint-initdb.d
    networks:
      - twinup-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8123/ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # ============================================================================
  # MONITORING - Prometheus
  # ============================================================================
  prometheus:
    image: prom/prometheus:v2.47.0
    hostname: prometheus
    container_name: twinup-prometheus
    ports:
      - "9090:9090"
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    networks:
      - twinup-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:9090/-/healthy"]
      interval: 30s
      timeout: 10s
      retries: 3

  # ============================================================================
  # VISUALIZATION - Grafana
  # ============================================================================
  grafana:
    image: grafana/grafana:10.1.0
    hostname: grafana
    container_name: twinup-grafana
    ports:
      - "3000:3000"
    environment:
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: twinup123
      GF_INSTALL_PLUGINS: grafana-clock-panel,grafana-simple-json-datasource
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    networks:
      - twinup-network
    depends_on:
      - prometheus
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:3000/api/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  # ============================================================================
  # MQTT BROKER - Eclipse Mosquitto
  # ============================================================================
  mosquitto:
    image: eclipse-mosquitto:2.0
    hostname: mosquitto
    container_name: twinup-mosquitto
    ports:
      - "1883:1883"
      - "9001:9001"
    volumes:
      - ./mosquitto/config:/mosquitto/config
      - mosquitto_data:/mosquitto/data
      - mosquitto_logs:/mosquitto/log
    networks:
      - twinup-network
    healthcheck:
      test: ["CMD-SHELL", "mosquitto_pub -h localhost -t test -m 'health check' || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  # ============================================================================
  # MICROSERVICES
  # ============================================================================
  sensor-producer:
    build:
      context: ../../services/sensor-producer-service
      dockerfile: Dockerfile
    container_name: twinup-sensor-producer
    environment:
      - KAFKA_BROKERS=kafka:29092
      - LOG_LEVEL=info
      - DEVICE_COUNT=10000
      - BATCH_SIZE=1000
      - PRODUCE_INTERVAL=1s
    depends_on:
      kafka:
        condition: service_healthy
    networks:
      - twinup-network
    restart: unless-stopped

  sensor-consumer:
    build:
      context: ../../services/sensor-consumer-service
      dockerfile: Dockerfile
    container_name: twinup-sensor-consumer
    environment:
      - KAFKA_BROKERS=kafka:29092
      - CLICKHOUSE_HOST=clickhouse:9000
      - CLICKHOUSE_USER=twinup
      - CLICKHOUSE_PASSWORD=twinup123
      - CLICKHOUSE_DATABASE=sensor_data
      - REDIS_HOST=redis:6379
      - GRPC_ALERT_SERVICE=alert-handler:50051
      - LOG_LEVEL=info
    depends_on:
      kafka:
        condition: service_healthy
      clickhouse:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - twinup-network
    restart: unless-stopped

  real-time-analytics:
    build:
      context: ../../services/real-time-analytics-service
      dockerfile: Dockerfile
    container_name: twinup-analytics
    environment:
      - KAFKA_BROKERS=kafka:29092
      - MQTT_BROKER=mosquitto:1883
      - LOG_LEVEL=info
    depends_on:
      kafka:
        condition: service_healthy
      mosquitto:
        condition: service_healthy
    networks:
      - twinup-network
    restart: unless-stopped

  alert-handler:
    build:
      context: ../../services/alert-handler-service
      dockerfile: Dockerfile
    container_name: twinup-alert-handler
    ports:
      - "50051:50051"
    environment:
      - GRPC_PORT=50051
      - SMTP_HOST=smtp.gmail.com
      - SMTP_PORT=587
      - LOG_LEVEL=info
    networks:
      - twinup-network
    restart: unless-stopped

  authentication:
    build:
      context: ../../services/authentication-service
      dockerfile: Dockerfile
    container_name: twinup-auth
    ports:
      - "8080:8080"
    environment:
      - HTTP_PORT=8080
      - JWT_SECRET=twinup-super-secret-jwt-key-2023
      - REDIS_HOST=redis:6379
      - LOG_LEVEL=info
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - twinup-network
    restart: unless-stopped

  api-gateway:
    build:
      context: ../../services/api-gateway-service
      dockerfile: Dockerfile
    container_name: twinup-api-gateway
    ports:
      - "8081:8081"
    environment:
      - HTTP_PORT=8081
      - REDIS_HOST=redis:6379
      - CLICKHOUSE_HOST=clickhouse:9000
      - CLICKHOUSE_USER=twinup
      - CLICKHOUSE_PASSWORD=twinup123
      - CLICKHOUSE_DATABASE=sensor_data
      - AUTH_SERVICE=authentication:8080
      - LOG_LEVEL=info
    depends_on:
      redis:
        condition: service_healthy
      clickhouse:
        condition: service_healthy
    networks:
      - twinup-network
    restart: unless-stopped

# ============================================================================
# NETWORKS
# ============================================================================
networks:
  twinup-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

# ============================================================================
# VOLUMES
# ============================================================================
volumes:
  zookeeper_data:
    driver: local
  zookeeper_logs:
    driver: local
  kafka_data:
    driver: local
  redis_data:
    driver: local
  clickhouse_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local
  mosquitto_data:
    driver: local
  mosquitto_logs:
    driver: local
